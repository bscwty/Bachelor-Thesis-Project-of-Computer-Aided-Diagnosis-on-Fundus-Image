# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
from PyQt5.QtCore import *


from seg.api import Seg
from cla.api import Cla
from gui.windows import Ui_ClaShow, Ui_SegShow

from PIL import Image, ImageQt
import time

import random
#import cv2


class Ui_MainWindow(QWidget):

    def __init__(self, mainwindow):

        super(Ui_MainWindow, self).__init__()

        self.clawindow, self.segwindow = self.loadwindows()
        
        self.setupUi(mainwindow)
        self.connectFunction()

        self.qssStyle = self.readQss('./gui/QSS/my.qss')
        self.labelqssStyle = self.readQss('./gui/QSS/label.qss')
        mainwindow.setStyleSheet(self.qssStyle)

        # self.showIcon('./gui/QSS/QSS_IMG/icon.png')
        self.setFont()

        self.render()
        
        self.method = 'cam'
        self.heatmap = None
        self.pNum = None
        self.cur_item = None

        

        # self.temp()

    def temp(self):
        diseases = ['DR          ', 
                    'Glaucoma    ',
                    'AMD         ',
                    'Hypertension',
                    'Myopia      ',
                    'Macula      ',
                    'Disc        ',
                    'Others      ']
        num = [random.random() for i in range(8)]
        content = []
        for n, d in zip(num, diseases):
            if n < 0.1:
                content.append('%s    %.2f%s'%(d, float(n)*100, '%'))
            else:
                content.append('%s   %.2f%s'%(d, float(n)*100, '%'))
        content.append('=====================')
        listModel = QStringListModel()
        listModel.setStringList(content)
        self.ResultList.setModel(listModel)

    def load(self, seg: Seg, cla: Cla):

        self.statusbar.showMessage('加载模型...', 2000)

        start = time.time()

        self.seg = seg
        self.seg.init_net()

        self.cla = cla
        self.cla.init_net()

        end = time.time()
        
        self.statusbar.showMessage('加载完成! 耗时%.2f秒'%(end-start), 5000)


    def readQss(self, file):
        with open(file, 'r') as f:
            qss = f.read()
            return qss

    def showIcon(self, img):
        self.Icon.setPixmap(QPixmap(img))
        self.Icon.setScaledContents(True)

    def loadImage(self) -> Image.Image:

        filename, _ = QFileDialog.getOpenFileName(self, '打开文件', '.', '图像文件 (*.jpg *.jpeg *.png *.JPEG)')

        try:
            img = Image.open(filename).convert('RGB')

            qPixmap = QPixmap(filename)
            qPixmap = qPixmap.scaled(224, 224)
            self.OrgImg.setPixmap(qPixmap)

        except:
            img = None
        
        return img

    def run_seg(self, img: Image.Image) -> Image.Image:
        return self.seg(img)
        
    def run_cla(self, img: Image.Image, method: str='cam'):
        pNum, heatmap, cla = self.cla(img, method)

        self.pNum = pNum
        self.heatmap = heatmap

        return cla

    def display(self, seg: Image.Image, cla: list) -> None:

        seg_img = ImageQt.ImageQt(seg)
        seg_pix = QPixmap.fromImage(seg_img)
        seg_pix = seg_pix.scaled(224, 224)

        self.SegImg.setPixmap(seg_pix)

        listModel = QStringListModel()
        listModel.setStringList(cla)
        self.ResultList.setModel(listModel)

    def displayHeatMap(self, item):

        idx = item.row()
        self.cur_item = item

        if not self.pNum:
            self.pNum = 1

        if idx == self.pNum:
            return
        elif idx > self.pNum:
            idx -= 1
        else:
            pass

        heatmap = self.heatmap[idx]
        heatmap = ImageQt.ImageQt(heatmap)
        heatmap_pix = QPixmap.fromImage(heatmap)
        heatmap_pix = heatmap_pix.scaled(224, 224)

        self.HeatmapImg.setPixmap(heatmap_pix)

        return

    def displayFirstHeatmap(self):

        heatmap = self.heatmap[0]
        heatmap = ImageQt.ImageQt(heatmap)
        heatmap_pix = QPixmap.fromImage(heatmap)
        heatmap_pix = heatmap_pix.scaled(224, 224)

        self.HeatmapImg.setPixmap(heatmap_pix)

        return

    def run(self):

        self.img = self.loadImage()

        if self.img:

            start = time.time()

            seg = self.run_seg(self.img)
            cla = self.run_cla(self.img, self.method)

            end = time.time()

            self.statusbar.showMessage('预测完成! 耗时%.2f秒'%(end-start), 5000)
            self.display(seg, cla)
            self.displayFirstHeatmap()

        else:
            pass

    def selectMethod(self):

        if self.CAM.isChecked():
            method = 'cam'
        elif self.GradCAM.isChecked():
            method = 'gradcam'
        elif self.GradCAMpp.isChecked():
            method = 'gradcampp'
        else:
            print('ERROR!')

        if self.method != method:
            self.method = method
            if self.heatmap:
                _ = self.run_cla(self.img, self.method)
                self.displayHeatMap(self.cur_item)

        else:
            pass

    def loadwindows(self):

        cla_mainwindow = QMainWindow()
        cla_ui = Ui_ClaShow(cla_mainwindow)

        seg_mainwindow = QMainWindow()
        seg_ui = Ui_SegShow(seg_mainwindow)

        return cla_mainwindow, seg_mainwindow

    def openClaWindow(self):
        cla_mainwindow = QMainWindow()
        cla_ui = Ui_ClaShow(cla_mainwindow)
        cla_mainwindow.show()

    def connectFunction(self):
        self.OpenFile.clicked.connect(self.run)
        self.ResultList.clicked.connect(self.displayHeatMap)

        self.CAM.clicked.connect(self.selectMethod)
        self.GradCAM.clicked.connect(self.selectMethod)
        self.GradCAMpp.clicked.connect(self.selectMethod)

        self.clawindowaction.triggered.connect(self.clawindow.show)
        self.segwindowaction.triggered.connect(self.segwindow.show)

    def setFont(self):

        eng_font = QFont("Source Code Pro", 11)
        eng_font.setBold(True)

        self.ResultList.setFont(eng_font)

        eng_font.setBold(True)

        self.CAM.setFont(eng_font)
        self.GradCAM.setFont(eng_font)
        self.GradCAMpp.setFont(eng_font)

        ch_font = QFont("华文细黑", 12)
        ch_font.setBold(True)

        self.OrgImgLabel.setFont(ch_font)
        self.DiseaseLabel.setFont(ch_font)
        self.HeatmapLabel.setFont(ch_font)
        self.DiseaseIntroLabel.setFont(ch_font)
        self.OpenFile.setFont(ch_font)

    def render(self):

        
        # self.ResultList.setGraphicsEffect(op)
        # self.ResultList.setAutoFillBackground(True)

        # self.BackFrame.setFrameShape(QFrame.Box)
        pixmap = QPixmap('./imgs/title3.png')

        self.TitleLabel.setPixmap(pixmap)#.setStyleSheet('background-color: rgb(255, 255, 255);')

        # self.MiddleLabel.setStyleSheet('background-color: rgb(65,64,59);')

        self.HeatmapImg.setStyleSheet(self.labelqssStyle)
        self.SegImg.setStyleSheet(self.labelqssStyle)
        self.OrgImg.setStyleSheet(self.labelqssStyle)

        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0.5)

        self.BackLabel.setStyleSheet('background-color: rgb(40,40,40);')
        self.BackLabel.setGraphicsEffect(op)
        self.BackLabel.setAutoFillBackground(True)

        self.OrgImgLabel.setStyleSheet('color: rgb(223,219,210);')
        self.DiseaseLabel.setStyleSheet('color: rgb(223,219,210);')
        self.HeatmapLabel.setStyleSheet('color: rgb(223,219,210);')
        self.DiseaseIntroLabel.setStyleSheet('color: rgb(223,219,210);')

    def setupUi(self, MainWindow):

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 805)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.BackLabel = QtWidgets.QLabel(self.centralwidget)
        self.BackLabel.setGeometry(QtCore.QRect(0, 200, 800, 575))
        self.BackLabel.setText("")
        self.BackLabel.setObjectName("BackLabel")

        self.TitleLabel = QtWidgets.QLabel(self.centralwidget)
        self.TitleLabel.setGeometry(QtCore.QRect(0, 0, 800, 200))
        self.TitleLabel.setText("")
        self.TitleLabel.setObjectName("TitleLabel")

        # self.MiddleLabel = QtWidgets.QLabel(self.centralwidget)
        # self.MiddleLabel.setGeometry(QtCore.QRect(0, 120, 800, 80))
        # self.MiddleLabel.setText("")
        # self.MiddleLabel.setObjectName("MiddleLabel")


        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(50, 210, 701, 541))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.LeftFrame = QtWidgets.QFrame(self.horizontalLayoutWidget)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LeftFrame.sizePolicy().hasHeightForWidth())

        self.LeftFrame.setSizePolicy(sizePolicy)
        self.LeftFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.LeftFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.LeftFrame.setObjectName("LeftFrame")

        self.OrgImg = QtWidgets.QLabel(self.LeftFrame)
        self.OrgImg.setGeometry(QtCore.QRect(50, 30, 224, 224))
        self.OrgImg.setSizePolicy(sizePolicy)
        self.OrgImg.setObjectName("OrgImg")

        self.OrgImgLabel = QtWidgets.QLabel(self.LeftFrame)
        self.OrgImgLabel.setGeometry(QtCore.QRect(0, 0, 121, 31))
        self.OrgImgLabel.setObjectName("OrgImgLabel")

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OrgImg.sizePolicy().hasHeightForWidth())
        
        
        self.ResultList = QtWidgets.QListView(self.LeftFrame)
        self.ResultList.setGeometry(QtCore.QRect(50, 290, 224, 224))
        self.ResultList.setObjectName("ResultList")
        
        
        self.DiseaseLabel = QtWidgets.QLabel(self.LeftFrame)
        self.DiseaseLabel.setGeometry(QtCore.QRect(0, 260, 121, 31))
        self.DiseaseLabel.setObjectName("DiseaseLabel")

        self.horizontalLayout.addWidget(self.LeftFrame)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout.addItem(spacerItem)
        self.frame = QtWidgets.QFrame(self.horizontalLayoutWidget)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame.sizePolicy().hasHeightForWidth())
        self.frame.setSizePolicy(sizePolicy)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")

        self.HeatmapLabel = QtWidgets.QLabel(self.frame)
        self.HeatmapLabel.setGeometry(QtCore.QRect(0, 0, 121, 31))
        self.HeatmapLabel.setObjectName("HeatmapLabel")

        self.DiseaseIntro = QtWidgets.QLabel(self.frame)
        self.DiseaseIntro.setGeometry(QtCore.QRect(50, 300, 224, 131))
        self.DiseaseIntro.setText("")
        self.DiseaseIntro.setObjectName("DiseaseIntro")

        self.SegImg = QtWidgets.QLabel(self.frame)
        self.SegImg.setGeometry(QtCore.QRect(50, 30, 224, 224))

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.SegImg.sizePolicy().hasHeightForWidth())

        self.SegImg.setSizePolicy(sizePolicy)
        self.SegImg.setObjectName("SegImg")

        self.DiseaseIntroLabel = QtWidgets.QLabel(self.frame)
        self.DiseaseIntroLabel.setGeometry(QtCore.QRect(0, 260, 121, 31))
        self.DiseaseIntroLabel.setObjectName("DiseaseIntroLabel")

        self.HeatmapImg = QtWidgets.QLabel(self.frame)
        self.HeatmapImg.setGeometry(QtCore.QRect(50, 290, 224, 224))
        
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.HeatmapImg.sizePolicy().hasHeightForWidth())

        self.HeatmapImg.setSizePolicy(sizePolicy)
        self.HeatmapImg.setObjectName("HeatmapImg")

        self.horizontalLayout.addWidget(self.frame)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(50, 130, 701, 61))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")

        self.MiddleLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.MiddleLayout.setContentsMargins(0, 0, 0, 0)
        self.MiddleLayout.setObjectName("MiddleLayout")


        self.CAM = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CAM.sizePolicy().hasHeightForWidth())

        self.CAM.setSizePolicy(sizePolicy)
        self.CAM.setObjectName("CAM")
        

        self.CAM.setChecked(True)

        self.MiddleLayout.addWidget(self.CAM)

        self.GradCAM = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GradCAM.sizePolicy().hasHeightForWidth())

        self.GradCAM.setSizePolicy(sizePolicy)
        self.GradCAM.setObjectName("GradCAM")
        

        self.MiddleLayout.addWidget(self.GradCAM)

        self.MiddleFrame = QtWidgets.QFrame(self.horizontalLayoutWidget_2)
        self.MiddleFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.MiddleFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.MiddleFrame.setObjectName("MiddleFrame")

        self.MiddleLayout.addWidget(self.MiddleFrame)


        self.GradCAMpp = QtWidgets.QRadioButton(self.horizontalLayoutWidget_2)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.GradCAMpp.sizePolicy().hasHeightForWidth())

        self.GradCAMpp.setSizePolicy(sizePolicy)
        self.GradCAMpp.setObjectName("GradCAMpp")


        self.MiddleLayout.addWidget(self.GradCAMpp)

        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.MiddleLayout.addItem(spacerItem1)
        self.OpenFile = QtWidgets.QPushButton(self.horizontalLayoutWidget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.OpenFile.sizePolicy().hasHeightForWidth())
        self.OpenFile.setSizePolicy(sizePolicy)
        self.OpenFile.setObjectName("OpenFile")
        self.MiddleLayout.addWidget(self.OpenFile)
        self.BackLabel.raise_()
        self.GradCAM.raise_()
        self.GradCAMpp.raise_()
        self.OpenFile.raise_()
        self.CAM.raise_()
        self.MiddleFrame.raise_()
        self.AboveFrame = QtWidgets.QFrame(self.centralwidget)
        self.AboveFrame.setGeometry(QtCore.QRect(50, 20, 701, 101))
        self.AboveFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.AboveFrame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.AboveFrame.setObjectName("AboveFrame")

        # self.Icon = QtWidgets.QLabel(self.AboveFrame)
        # self.Icon.setGeometry(QtCore.QRect(120, 0, 91, 91))
        # self.Icon.setText("")
        # self.Icon.setObjectName("Icon")

        # self.Title = QtWidgets.QLabel(self.AboveFrame)
        # self.Title.setGeometry(QtCore.QRect(220, 15, 361, 51))
        # font = QtGui.QFont()
        # font.setFamily("华文细黑")
        # font.setPointSize(18)
        # self.Title.setFont(font)
        # self.Title.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        # self.Title.setFrameShape(QtWidgets.QFrame.NoFrame)
        # self.Title.setFrameShadow(QtWidgets.QFrame.Plain)
        # self.Title.setTextFormat(QtCore.Qt.PlainText)
        # self.Title.setObjectName("Title")

        self.AboveFrame.raise_()
        self.horizontalLayoutWidget.raise_()
        self.horizontalLayoutWidget_2.raise_()
        MainWindow.setCentralWidget(self.centralwidget)


        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 798, 26))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.clawindowaction = QtWidgets.QAction(MainWindow)
        self.clawindowaction.setObjectName("clawindowaction")
        self.segwindowaction = QtWidgets.QAction(MainWindow)
        self.segwindowaction.setObjectName("segwindowaction")
        self.menu.addAction(self.clawindowaction)
        self.menu.addAction(self.segwindowaction)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "眼底多病种识别工具"))
        self.OrgImgLabel.setText(_translate("MainWindow", "原始图片："))
        self.DiseaseLabel.setText(_translate("MainWindow", "预测结果："))
        self.HeatmapLabel.setText(_translate("MainWindow", "分割结果："))
        self.DiseaseIntroLabel.setText(_translate("MainWindow", "热图定位："))
        self.CAM.setText(_translate("MainWindow", "CAM"))
        self.GradCAM.setText(_translate("MainWindow", "GradCAM"))
        self.GradCAMpp.setText(_translate("MainWindow", "GradCAM++"))
        self.OpenFile.setText(_translate("MainWindow", "打开图片"))
        # self.Title.setText(_translate("MainWindow", "东南大学 眼底多病种识别"))
        self.menu.setTitle(_translate("MainWindow", "数据集及模型信息"))
        self.clawindowaction.setText(_translate("MainWindow", "多病种分类"))
        self.segwindowaction.setText(_translate("MainWindow", "血管视盘分割"))
